name: Run Tests

on: [push]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:10.8
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: postgres
        ports:
          # will assign a random free host port
          - 5432/tcp
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - uses: actions/checkout@v1
      - run: |
          mkdir src/keys
          cd src/keys
          openssl genrsa -out access-token-private.key 512
          openssl genrsa -out refresh-token-private.key 512
          openssl rsa -in access-token-private.key -outform PEM -pubout -out access-token-public.key
          openssl rsa -in access-token-private.key -outform PEM -pubout -out refresh-token-public.key
      - run: yarn install --frozen-lockfile
      - run: yarn test
        env:
          # use localhost for the host here because we are running the job on the VM.
          # If we were running the job on in a container this would be postgres
          DB_HOST: localhost
          DB_PORT: ${{ job.services.postgres.ports[5432] }} # get randomly assigned published port

    # runs-on: ubuntu-latest
    # container:
    #   image: node:10.16-jessie
    # steps:
    #   - uses: actions/checkout@v1
    #   # - run: |
    #   #     mkdir src/keys
    #   #     cd src/keys
    #   #     openssl genrsa -out access-token-private.key 512
    #   #     openssl genrsa -out refresh-token-private.key 512
    #   #     openssl rsa -in access-token-private.key -outform PEM -pubout -out access-token-public.key
    #   #     openssl rsa -in access-token-private.key -outform PEM -pubout -out refresh-token-public.key
    #   - run: yarn install --frozen-lockfile
    #   - run: yarn test
    #     env:
    #       DB_HOST: postgres
    #       DB_PORT: ${{ job.services.postgres.ports[5432] }}
    # services:
    #   postgres:
    #     image: postgres:10.8
    #     env:
    #       POSTGRES_USER: postgres
    #       POSTGRES_PASSWORD: postgres
    #       POSTGRES_DB: postgres
    #     ports:
    #       - 5432:5432
    #     options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
